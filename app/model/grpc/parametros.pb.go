// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: parametros.proto

package grpc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListaParametros struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parametros []*Parametro `protobuf:"bytes,1,rep,name=parametros,proto3" json:"parametros,omitempty"`
}

func (x *ListaParametros) Reset() {
	*x = ListaParametros{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parametros_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListaParametros) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListaParametros) ProtoMessage() {}

func (x *ListaParametros) ProtoReflect() protoreflect.Message {
	mi := &file_parametros_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListaParametros.ProtoReflect.Descriptor instead.
func (*ListaParametros) Descriptor() ([]byte, []int) {
	return file_parametros_proto_rawDescGZIP(), []int{0}
}

func (x *ListaParametros) GetParametros() []*Parametro {
	if x != nil {
		return x.Parametros
	}
	return nil
}

var File_parametros_proto protoreflect.FileDescriptor

var file_parametros_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x6f,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73, 0x12,
	0x2f, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x72, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73,
	0x32, 0xce, 0x04, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73, 0x12,
	0x61, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x72, 0x6f, 0x73, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x61, 0x7a, 0x69, 0x6f, 0x1a, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e,
	0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72,
	0x6f, 0x73, 0x12, 0x68, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x72, 0x6f, 0x42, 0x79, 0x4e, 0x6f, 0x6d, 0x65, 0x12, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x1a, 0x0f, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x22, 0x2d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73,
	0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73,
	0x2f, 0x6e, 0x6f, 0x6d, 0x65, 0x2f, 0x7b, 0x4e, 0x6f, 0x6d, 0x65, 0x7d, 0x12, 0x5d, 0x0a, 0x11,
	0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x72, 0x6f, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x12, 0x59, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x12, 0x0f,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x1a,
	0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f,
	0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73, 0x12, 0x59, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x1a, 0x0f, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x1a, 0x19, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65,
	0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f,
	0x73, 0x12, 0x5e, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x72, 0x6f, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x20, 0x2a, 0x1e, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x73, 0x2f, 0x7b, 0x49, 0x44,
	0x7d, 0x42, 0x14, 0x5a, 0x12, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_parametros_proto_rawDescOnce sync.Once
	file_parametros_proto_rawDescData = file_parametros_proto_rawDesc
)

func file_parametros_proto_rawDescGZIP() []byte {
	file_parametros_proto_rawDescOnce.Do(func() {
		file_parametros_proto_rawDescData = protoimpl.X.CompressGZIP(file_parametros_proto_rawDescData)
	})
	return file_parametros_proto_rawDescData
}

var file_parametros_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_parametros_proto_goTypes = []any{
	(*ListaParametros)(nil), // 0: grpc.ListaParametros
	(*Parametro)(nil),       // 1: grpc.Parametro
	(*RequestVazio)(nil),    // 2: grpc.RequestVazio
	(*RequestNome)(nil),     // 3: grpc.RequestNome
	(*RequestId)(nil),       // 4: grpc.RequestId
	(*ResponseBool)(nil),    // 5: grpc.ResponseBool
}
var file_parametros_proto_depIdxs = []int32{
	1, // 0: grpc.ListaParametros.parametros:type_name -> grpc.Parametro
	2, // 1: grpc.Parametros.FindAllParametros:input_type -> grpc.RequestVazio
	3, // 2: grpc.Parametros.FindParametroByNome:input_type -> grpc.RequestNome
	4, // 3: grpc.Parametros.FindParametroById:input_type -> grpc.RequestId
	1, // 4: grpc.Parametros.CreateParametro:input_type -> grpc.Parametro
	1, // 5: grpc.Parametros.UpdateParametro:input_type -> grpc.Parametro
	4, // 6: grpc.Parametros.DeleteParametro:input_type -> grpc.RequestId
	0, // 7: grpc.Parametros.FindAllParametros:output_type -> grpc.ListaParametros
	1, // 8: grpc.Parametros.FindParametroByNome:output_type -> grpc.Parametro
	1, // 9: grpc.Parametros.FindParametroById:output_type -> grpc.Parametro
	1, // 10: grpc.Parametros.CreateParametro:output_type -> grpc.Parametro
	1, // 11: grpc.Parametros.UpdateParametro:output_type -> grpc.Parametro
	5, // 12: grpc.Parametros.DeleteParametro:output_type -> grpc.ResponseBool
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_parametros_proto_init() }
func file_parametros_proto_init() {
	if File_parametros_proto != nil {
		return
	}
	file_modelos_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_parametros_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListaParametros); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parametros_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_parametros_proto_goTypes,
		DependencyIndexes: file_parametros_proto_depIdxs,
		MessageInfos:      file_parametros_proto_msgTypes,
	}.Build()
	File_parametros_proto = out.File
	file_parametros_proto_rawDesc = nil
	file_parametros_proto_goTypes = nil
	file_parametros_proto_depIdxs = nil
}
