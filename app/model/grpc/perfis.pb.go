// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: perfis.proto

package grpc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListaPerfis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perfis []*Perfil `protobuf:"bytes,1,rep,name=perfis,proto3" json:"perfis,omitempty"`
}

func (x *ListaPerfis) Reset() {
	*x = ListaPerfis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perfis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListaPerfis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListaPerfis) ProtoMessage() {}

func (x *ListaPerfis) ProtoReflect() protoreflect.Message {
	mi := &file_perfis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListaPerfis.ProtoReflect.Descriptor instead.
func (*ListaPerfis) Descriptor() ([]byte, []int) {
	return file_perfis_proto_rawDescGZIP(), []int{0}
}

func (x *ListaPerfis) GetPerfis() []*Perfil {
	if x != nil {
		return x.Perfis
	}
	return nil
}

type ResponseGetUsuariosVinculados struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usuarios []*Usuario `protobuf:"bytes,1,rep,name=usuarios,proto3" json:"usuarios,omitempty"`
}

func (x *ResponseGetUsuariosVinculados) Reset() {
	*x = ResponseGetUsuariosVinculados{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perfis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetUsuariosVinculados) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetUsuariosVinculados) ProtoMessage() {}

func (x *ResponseGetUsuariosVinculados) ProtoReflect() protoreflect.Message {
	mi := &file_perfis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetUsuariosVinculados.ProtoReflect.Descriptor instead.
func (*ResponseGetUsuariosVinculados) Descriptor() ([]byte, []int) {
	return file_perfis_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseGetUsuariosVinculados) GetUsuarios() []*Usuario {
	if x != nil {
		return x.Usuarios
	}
	return nil
}

type ResponseGetPermissoesVinculadas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissoes []*Permissao `protobuf:"bytes,1,rep,name=permissoes,proto3" json:"permissoes,omitempty"`
}

func (x *ResponseGetPermissoesVinculadas) Reset() {
	*x = ResponseGetPermissoesVinculadas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_perfis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetPermissoesVinculadas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetPermissoesVinculadas) ProtoMessage() {}

func (x *ResponseGetPermissoesVinculadas) ProtoReflect() protoreflect.Message {
	mi := &file_perfis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetPermissoesVinculadas.ProtoReflect.Descriptor instead.
func (*ResponseGetPermissoesVinculadas) Descriptor() ([]byte, []int) {
	return file_perfis_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseGetPermissoesVinculadas) GetPermissoes() []*Permissao {
	if x != nil {
		return x.Permissoes
	}
	return nil
}

var File_perfis_proto protoreflect.FileDescriptor

var file_perfis_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x67, 0x72, 0x70, 0x63, 0x1a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x6f, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x61, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x66, 0x69,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x65, 0x72, 0x66, 0x69, 0x6c, 0x52, 0x06, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x22, 0x4a, 0x0a,
	0x1d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x75, 0x61,
	0x72, 0x69, 0x6f, 0x73, 0x56, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64, 0x6f, 0x73, 0x12, 0x29,
	0x0a, 0x08, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x52,
	0x08, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x22, 0x52, 0x0a, 0x1f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f,
	0x65, 0x73, 0x56, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64, 0x61, 0x73, 0x12, 0x2f, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x61,
	0x6f, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x65, 0x73, 0x32, 0xba, 0x07,
	0x0a, 0x06, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73, 0x12, 0x55, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x61, 0x7a, 0x69, 0x6f, 0x1a, 0x11, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x12,
	0x5d, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x69, 0x6c,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x65, 0x73, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x12, 0x85,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x56, 0x69,
	0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64, 0x6f, 0x73, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x75, 0x61,
	0x72, 0x69, 0x6f, 0x73, 0x56, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64, 0x6f, 0x73, 0x22, 0x36,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65,
	0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x2f, 0x75, 0x73,
	0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x2d, 0x76, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64, 0x6f,
	0x73, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x12, 0x8b, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x65, 0x73, 0x56, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64,
	0x61, 0x73, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x1a, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x65, 0x73,
	0x56, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64, 0x61, 0x73, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x32, 0x12, 0x30, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x6f, 0x65, 0x73, 0x2d, 0x76, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64, 0x61, 0x73, 0x2f,
	0x7b, 0x49, 0x44, 0x7d, 0x12, 0x60, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65,
	0x72, 0x66, 0x69, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x65, 0x72, 0x66,
	0x69, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x65, 0x73, 0x1a, 0x16, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x6f, 0x65, 0x73, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22,
	0x15, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x12, 0x5a, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x50,
	0x65, 0x72, 0x66, 0x69, 0x6c, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x65,
	0x72, 0x66, 0x69, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x65, 0x73, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65,
	0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x2f, 0x7b, 0x49,
	0x44, 0x7d, 0x12, 0x60, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66,
	0x69, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x69, 0x6c,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x65, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f,
	0x65, 0x73, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x1a, 0x15, 0x2f,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65,
	0x72, 0x66, 0x69, 0x73, 0x12, 0x5e, 0x0a, 0x0c, 0x41, 0x74, 0x69, 0x76, 0x61, 0x72, 0x50, 0x65,
	0x72, 0x66, 0x69, 0x6c, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x1a, 0x21, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x2f, 0x61, 0x74, 0x69, 0x76, 0x61, 0x72, 0x2f,
	0x7b, 0x49, 0x44, 0x7d, 0x12, 0x64, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x61, 0x74, 0x69, 0x76, 0x61,
	0x72, 0x50, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x2c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x1a, 0x24, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x2f, 0x64, 0x65, 0x73, 0x61,
	0x74, 0x69, 0x76, 0x61, 0x72, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x42, 0x14, 0x5a, 0x12, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_perfis_proto_rawDescOnce sync.Once
	file_perfis_proto_rawDescData = file_perfis_proto_rawDesc
)

func file_perfis_proto_rawDescGZIP() []byte {
	file_perfis_proto_rawDescOnce.Do(func() {
		file_perfis_proto_rawDescData = protoimpl.X.CompressGZIP(file_perfis_proto_rawDescData)
	})
	return file_perfis_proto_rawDescData
}

var file_perfis_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_perfis_proto_goTypes = []any{
	(*ListaPerfis)(nil),                     // 0: grpc.ListaPerfis
	(*ResponseGetUsuariosVinculados)(nil),   // 1: grpc.ResponseGetUsuariosVinculados
	(*ResponseGetPermissoesVinculadas)(nil), // 2: grpc.ResponseGetPermissoesVinculadas
	(*Perfil)(nil),                          // 3: grpc.Perfil
	(*Usuario)(nil),                         // 4: grpc.Usuario
	(*Permissao)(nil),                       // 5: grpc.Permissao
	(*RequestVazio)(nil),                    // 6: grpc.RequestVazio
	(*RequestId)(nil),                       // 7: grpc.RequestId
	(*PerfilPermissoes)(nil),                // 8: grpc.PerfilPermissoes
	(*ResponseBool)(nil),                    // 9: grpc.ResponseBool
}
var file_perfis_proto_depIdxs = []int32{
	3,  // 0: grpc.ListaPerfis.perfis:type_name -> grpc.Perfil
	4,  // 1: grpc.ResponseGetUsuariosVinculados.usuarios:type_name -> grpc.Usuario
	5,  // 2: grpc.ResponseGetPermissoesVinculadas.permissoes:type_name -> grpc.Permissao
	6,  // 3: grpc.Perfis.FindAllPerfis:input_type -> grpc.RequestVazio
	7,  // 4: grpc.Perfis.FindPerfilById:input_type -> grpc.RequestId
	7,  // 5: grpc.Perfis.GetUsuariosVinculados:input_type -> grpc.RequestId
	7,  // 6: grpc.Perfis.GetPermissoesVinculadas:input_type -> grpc.RequestId
	8,  // 7: grpc.Perfis.CreatePerfil:input_type -> grpc.PerfilPermissoes
	7,  // 8: grpc.Perfis.ClonePerfil:input_type -> grpc.RequestId
	8,  // 9: grpc.Perfis.UpdatePerfil:input_type -> grpc.PerfilPermissoes
	7,  // 10: grpc.Perfis.AtivarPerfil:input_type -> grpc.RequestId
	7,  // 11: grpc.Perfis.DesativarPerfil:input_type -> grpc.RequestId
	0,  // 12: grpc.Perfis.FindAllPerfis:output_type -> grpc.ListaPerfis
	8,  // 13: grpc.Perfis.FindPerfilById:output_type -> grpc.PerfilPermissoes
	1,  // 14: grpc.Perfis.GetUsuariosVinculados:output_type -> grpc.ResponseGetUsuariosVinculados
	2,  // 15: grpc.Perfis.GetPermissoesVinculadas:output_type -> grpc.ResponseGetPermissoesVinculadas
	8,  // 16: grpc.Perfis.CreatePerfil:output_type -> grpc.PerfilPermissoes
	8,  // 17: grpc.Perfis.ClonePerfil:output_type -> grpc.PerfilPermissoes
	8,  // 18: grpc.Perfis.UpdatePerfil:output_type -> grpc.PerfilPermissoes
	9,  // 19: grpc.Perfis.AtivarPerfil:output_type -> grpc.ResponseBool
	9,  // 20: grpc.Perfis.DesativarPerfil:output_type -> grpc.ResponseBool
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_perfis_proto_init() }
func file_perfis_proto_init() {
	if File_perfis_proto != nil {
		return
	}
	file_modelos_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_perfis_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListaPerfis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perfis_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ResponseGetUsuariosVinculados); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_perfis_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ResponseGetPermissoesVinculadas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_perfis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_perfis_proto_goTypes,
		DependencyIndexes: file_perfis_proto_depIdxs,
		MessageInfos:      file_perfis_proto_msgTypes,
	}.Build()
	File_perfis_proto = out.File
	file_perfis_proto_rawDesc = nil
	file_perfis_proto_goTypes = nil
	file_perfis_proto_depIdxs = nil
}
