// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v4.25.1
// source: favoritos.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	Favoritos_FindFavoritoById_FullMethodName              = "/grpc.Favoritos/FindFavoritoById"
	Favoritos_FindJogosFavoritoByUsuario_FullMethodName    = "/grpc.Favoritos/FindJogosFavoritoByUsuario"
	Favoritos_FindProdutosFavoritoByUsuario_FullMethodName = "/grpc.Favoritos/FindProdutosFavoritoByUsuario"
	Favoritos_CreateFavorito_FullMethodName                = "/grpc.Favoritos/CreateFavorito"
	Favoritos_UpdateFavorito_FullMethodName                = "/grpc.Favoritos/UpdateFavorito"
	Favoritos_DeleteFavorito_FullMethodName                = "/grpc.Favoritos/DeleteFavorito"
)

// FavoritosClient is the client API for Favoritos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Definição do serviço
type FavoritosClient interface {
	FindFavoritoById(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Favorito, error)
	FindJogosFavoritoByUsuario(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ListaFavoritos, error)
	FindProdutosFavoritoByUsuario(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ListaFavoritos, error)
	CreateFavorito(ctx context.Context, in *Favorito, opts ...grpc.CallOption) (*Favorito, error)
	UpdateFavorito(ctx context.Context, in *Favorito, opts ...grpc.CallOption) (*Favorito, error)
	DeleteFavorito(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error)
}

type favoritosClient struct {
	cc grpc.ClientConnInterface
}

func NewFavoritosClient(cc grpc.ClientConnInterface) FavoritosClient {
	return &favoritosClient{cc}
}

func (c *favoritosClient) FindFavoritoById(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Favorito, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Favorito)
	err := c.cc.Invoke(ctx, Favoritos_FindFavoritoById_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritosClient) FindJogosFavoritoByUsuario(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ListaFavoritos, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaFavoritos)
	err := c.cc.Invoke(ctx, Favoritos_FindJogosFavoritoByUsuario_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritosClient) FindProdutosFavoritoByUsuario(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ListaFavoritos, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListaFavoritos)
	err := c.cc.Invoke(ctx, Favoritos_FindProdutosFavoritoByUsuario_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritosClient) CreateFavorito(ctx context.Context, in *Favorito, opts ...grpc.CallOption) (*Favorito, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Favorito)
	err := c.cc.Invoke(ctx, Favoritos_CreateFavorito_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritosClient) UpdateFavorito(ctx context.Context, in *Favorito, opts ...grpc.CallOption) (*Favorito, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Favorito)
	err := c.cc.Invoke(ctx, Favoritos_UpdateFavorito_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritosClient) DeleteFavorito(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*ResponseBool, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ResponseBool)
	err := c.cc.Invoke(ctx, Favoritos_DeleteFavorito_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FavoritosServer is the server API for Favoritos service.
// All implementations must embed UnimplementedFavoritosServer
// for forward compatibility.
//
// Definição do serviço
type FavoritosServer interface {
	FindFavoritoById(context.Context, *RequestId) (*Favorito, error)
	FindJogosFavoritoByUsuario(context.Context, *RequestId) (*ListaFavoritos, error)
	FindProdutosFavoritoByUsuario(context.Context, *RequestId) (*ListaFavoritos, error)
	CreateFavorito(context.Context, *Favorito) (*Favorito, error)
	UpdateFavorito(context.Context, *Favorito) (*Favorito, error)
	DeleteFavorito(context.Context, *RequestId) (*ResponseBool, error)
	mustEmbedUnimplementedFavoritosServer()
}

// UnimplementedFavoritosServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedFavoritosServer struct{}

func (UnimplementedFavoritosServer) FindFavoritoById(context.Context, *RequestId) (*Favorito, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindFavoritoById not implemented")
}
func (UnimplementedFavoritosServer) FindJogosFavoritoByUsuario(context.Context, *RequestId) (*ListaFavoritos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindJogosFavoritoByUsuario not implemented")
}
func (UnimplementedFavoritosServer) FindProdutosFavoritoByUsuario(context.Context, *RequestId) (*ListaFavoritos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindProdutosFavoritoByUsuario not implemented")
}
func (UnimplementedFavoritosServer) CreateFavorito(context.Context, *Favorito) (*Favorito, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFavorito not implemented")
}
func (UnimplementedFavoritosServer) UpdateFavorito(context.Context, *Favorito) (*Favorito, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFavorito not implemented")
}
func (UnimplementedFavoritosServer) DeleteFavorito(context.Context, *RequestId) (*ResponseBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFavorito not implemented")
}
func (UnimplementedFavoritosServer) mustEmbedUnimplementedFavoritosServer() {}
func (UnimplementedFavoritosServer) testEmbeddedByValue()                   {}

// UnsafeFavoritosServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FavoritosServer will
// result in compilation errors.
type UnsafeFavoritosServer interface {
	mustEmbedUnimplementedFavoritosServer()
}

func RegisterFavoritosServer(s grpc.ServiceRegistrar, srv FavoritosServer) {
	// If the following call pancis, it indicates UnimplementedFavoritosServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&Favoritos_ServiceDesc, srv)
}

func _Favoritos_FindFavoritoById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritosServer).FindFavoritoById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Favoritos_FindFavoritoById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritosServer).FindFavoritoById(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Favoritos_FindJogosFavoritoByUsuario_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritosServer).FindJogosFavoritoByUsuario(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Favoritos_FindJogosFavoritoByUsuario_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritosServer).FindJogosFavoritoByUsuario(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Favoritos_FindProdutosFavoritoByUsuario_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritosServer).FindProdutosFavoritoByUsuario(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Favoritos_FindProdutosFavoritoByUsuario_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritosServer).FindProdutosFavoritoByUsuario(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Favoritos_CreateFavorito_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Favorito)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritosServer).CreateFavorito(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Favoritos_CreateFavorito_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritosServer).CreateFavorito(ctx, req.(*Favorito))
	}
	return interceptor(ctx, in, info, handler)
}

func _Favoritos_UpdateFavorito_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Favorito)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritosServer).UpdateFavorito(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Favoritos_UpdateFavorito_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritosServer).UpdateFavorito(ctx, req.(*Favorito))
	}
	return interceptor(ctx, in, info, handler)
}

func _Favoritos_DeleteFavorito_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritosServer).DeleteFavorito(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Favoritos_DeleteFavorito_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritosServer).DeleteFavorito(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

// Favoritos_ServiceDesc is the grpc.ServiceDesc for Favoritos service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Favoritos_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Favoritos",
	HandlerType: (*FavoritosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindFavoritoById",
			Handler:    _Favoritos_FindFavoritoById_Handler,
		},
		{
			MethodName: "FindJogosFavoritoByUsuario",
			Handler:    _Favoritos_FindJogosFavoritoByUsuario_Handler,
		},
		{
			MethodName: "FindProdutosFavoritoByUsuario",
			Handler:    _Favoritos_FindProdutosFavoritoByUsuario_Handler,
		},
		{
			MethodName: "CreateFavorito",
			Handler:    _Favoritos_CreateFavorito_Handler,
		},
		{
			MethodName: "UpdateFavorito",
			Handler:    _Favoritos_UpdateFavorito_Handler,
		},
		{
			MethodName: "DeleteFavorito",
			Handler:    _Favoritos_DeleteFavorito_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "favoritos.proto",
}
