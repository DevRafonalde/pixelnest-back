// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: usuarios.proto

package grpc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListaUsuarios struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usuarios []*Usuario `protobuf:"bytes,1,rep,name=usuarios,proto3" json:"usuarios,omitempty"`
}

func (x *ListaUsuarios) Reset() {
	*x = ListaUsuarios{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usuarios_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListaUsuarios) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListaUsuarios) ProtoMessage() {}

func (x *ListaUsuarios) ProtoReflect() protoreflect.Message {
	mi := &file_usuarios_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListaUsuarios.ProtoReflect.Descriptor instead.
func (*ListaUsuarios) Descriptor() ([]byte, []int) {
	return file_usuarios_proto_rawDescGZIP(), []int{0}
}

func (x *ListaUsuarios) GetUsuarios() []*Usuario {
	if x != nil {
		return x.Usuarios
	}
	return nil
}

type ResponsePerfisVinculados struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perfis []*Perfil `protobuf:"bytes,1,rep,name=perfis,proto3" json:"perfis,omitempty"`
}

func (x *ResponsePerfisVinculados) Reset() {
	*x = ResponsePerfisVinculados{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usuarios_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePerfisVinculados) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePerfisVinculados) ProtoMessage() {}

func (x *ResponsePerfisVinculados) ProtoReflect() protoreflect.Message {
	mi := &file_usuarios_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePerfisVinculados.ProtoReflect.Descriptor instead.
func (*ResponsePerfisVinculados) Descriptor() ([]byte, []int) {
	return file_usuarios_proto_rawDescGZIP(), []int{1}
}

func (x *ResponsePerfisVinculados) GetPerfis() []*Perfil {
	if x != nil {
		return x.Perfis
	}
	return nil
}

type RequestAlterarSenhaAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SenhaNova string `protobuf:"bytes,2,opt,name=SenhaNova,proto3" json:"SenhaNova,omitempty"`
}

func (x *RequestAlterarSenhaAdmin) Reset() {
	*x = RequestAlterarSenhaAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usuarios_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAlterarSenhaAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAlterarSenhaAdmin) ProtoMessage() {}

func (x *RequestAlterarSenhaAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_usuarios_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAlterarSenhaAdmin.ProtoReflect.Descriptor instead.
func (*RequestAlterarSenhaAdmin) Descriptor() ([]byte, []int) {
	return file_usuarios_proto_rawDescGZIP(), []int{2}
}

func (x *RequestAlterarSenhaAdmin) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RequestAlterarSenhaAdmin) GetSenhaNova() string {
	if x != nil {
		return x.SenhaNova
	}
	return ""
}

type RequestAlterarSenhaUsuario struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SenhaAntiga string `protobuf:"bytes,2,opt,name=SenhaAntiga,proto3" json:"SenhaAntiga,omitempty"`
	SenhaNova   string `protobuf:"bytes,3,opt,name=SenhaNova,proto3" json:"SenhaNova,omitempty"`
}

func (x *RequestAlterarSenhaUsuario) Reset() {
	*x = RequestAlterarSenhaUsuario{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usuarios_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAlterarSenhaUsuario) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAlterarSenhaUsuario) ProtoMessage() {}

func (x *RequestAlterarSenhaUsuario) ProtoReflect() protoreflect.Message {
	mi := &file_usuarios_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAlterarSenhaUsuario.ProtoReflect.Descriptor instead.
func (*RequestAlterarSenhaUsuario) Descriptor() ([]byte, []int) {
	return file_usuarios_proto_rawDescGZIP(), []int{3}
}

func (x *RequestAlterarSenhaUsuario) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RequestAlterarSenhaUsuario) GetSenhaAntiga() string {
	if x != nil {
		return x.SenhaAntiga
	}
	return ""
}

func (x *RequestAlterarSenhaUsuario) GetSenhaNova() string {
	if x != nil {
		return x.SenhaNova
	}
	return ""
}

type ResponseTokenResetSenha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ResponseTokenResetSenha) Reset() {
	*x = ResponseTokenResetSenha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usuarios_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseTokenResetSenha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseTokenResetSenha) ProtoMessage() {}

func (x *ResponseTokenResetSenha) ProtoReflect() protoreflect.Message {
	mi := &file_usuarios_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseTokenResetSenha.ProtoReflect.Descriptor instead.
func (*ResponseTokenResetSenha) Descriptor() ([]byte, []int) {
	return file_usuarios_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseTokenResetSenha) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_usuarios_proto protoreflect.FileDescriptor

var file_usuarios_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x6f, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x61, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x75,
	0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x52, 0x08, 0x75, 0x73,
	0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x22, 0x40, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73, 0x56, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64,
	0x6f, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x69, 0x6c,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x22, 0x48, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x72, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x4e, 0x6f, 0x76,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x4e, 0x6f,
	0x76, 0x61, 0x22, 0x6c, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x61, 0x72, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x41, 0x6e, 0x74, 0x69, 0x67, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x41, 0x6e, 0x74, 0x69,
	0x67, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x4e, 0x6f, 0x76, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x4e, 0x6f, 0x76, 0x61,
	0x22, 0x2f, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x32, 0xe1, 0x0a, 0x0a, 0x08, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x5b,
	0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f,
	0x73, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x61, 0x7a, 0x69, 0x6f, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x61, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x12, 0x17, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x5d, 0x0a, 0x0f, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0f,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a,
	0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x50, 0x65,
	0x72, 0x66, 0x69, 0x73, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x75,
	0x61, 0x72, 0x69, 0x6f, 0x73, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x12, 0x7e, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73, 0x56, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64, 0x6f,
	0x73, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73, 0x56, 0x69, 0x6e, 0x63, 0x75, 0x6c, 0x61, 0x64,
	0x6f, 0x73, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x75, 0x61, 0x72,
	0x69, 0x6f, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x69, 0x73, 0x2d, 0x76, 0x69, 0x6e, 0x63, 0x75,
	0x6c, 0x61, 0x64, 0x6f, 0x73, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x12, 0x5d, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x13, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73,
	0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x50,
	0x65, 0x72, 0x66, 0x69, 0x73, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a,
	0x22, 0x17, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x5a, 0x0a, 0x0c, 0x43, 0x6c, 0x6f,
	0x6e, 0x65, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x1c, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e,
	0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73,
	0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x12, 0x5d, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73,
	0x75, 0x61, 0x72, 0x69, 0x6f, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73, 0x1a, 0x13, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x50, 0x65, 0x72, 0x66, 0x69, 0x73,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x1a, 0x17, 0x2f, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x75, 0x61,
	0x72, 0x69, 0x6f, 0x73, 0x12, 0x7f, 0x0a, 0x11, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x72, 0x53,
	0x65, 0x6e, 0x68, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x72, 0x53,
	0x65, 0x6e, 0x68, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x36, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x1a, 0x2b, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f,
	0x73, 0x2f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x72, 0x2d, 0x73, 0x65, 0x6e, 0x68, 0x61, 0x2d,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x85, 0x01, 0x0a, 0x13, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61,
	0x72, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x20, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x61, 0x72, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x1a,
	0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x6f, 0x6f, 0x6c, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x1a, 0x2d,
	0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75,
	0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x2f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x72, 0x2d,
	0x73, 0x65, 0x6e, 0x68, 0x61, 0x2d, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x61, 0x0a,
	0x0d, 0x41, 0x74, 0x69, 0x76, 0x61, 0x72, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x0f,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a,
	0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x6f, 0x6f, 0x6c, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x1a, 0x23, 0x2f, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x75, 0x61,
	0x72, 0x69, 0x6f, 0x73, 0x2f, 0x61, 0x74, 0x69, 0x76, 0x61, 0x72, 0x2f, 0x7b, 0x49, 0x44, 0x7d,
	0x12, 0x67, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x61, 0x74, 0x69, 0x76, 0x61, 0x72, 0x55, 0x73, 0x75,
	0x61, 0x72, 0x69, 0x6f, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x1a, 0x26, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x75, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x2f, 0x64, 0x65, 0x73, 0x61, 0x74,
	0x69, 0x76, 0x61, 0x72, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x12, 0x57, 0x0a, 0x05, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55,
	0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x74, 0x6f, 0x72, 0x6e, 0x6f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69,
	0x6f, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x6f, 0x0a, 0x0f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x53, 0x65, 0x6e, 0x68, 0x61, 0x12, 0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x53, 0x65, 0x6e, 0x68, 0x61, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01,
	0x2a, 0x22, 0x20, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2d, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2d, 0x73, 0x65,
	0x6e, 0x68, 0x61, 0x12, 0x60, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x68,
	0x61, 0x12, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65,
	0x6e, 0x68, 0x61, 0x55, 0x73, 0x75, 0x61, 0x72, 0x69, 0x6f, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x1a, 0x1a, 0x2f, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2d,
	0x73, 0x65, 0x6e, 0x68, 0x61, 0x42, 0x14, 0x5a, 0x12, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65,
	0x73, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_usuarios_proto_rawDescOnce sync.Once
	file_usuarios_proto_rawDescData = file_usuarios_proto_rawDesc
)

func file_usuarios_proto_rawDescGZIP() []byte {
	file_usuarios_proto_rawDescOnce.Do(func() {
		file_usuarios_proto_rawDescData = protoimpl.X.CompressGZIP(file_usuarios_proto_rawDescData)
	})
	return file_usuarios_proto_rawDescData
}

var file_usuarios_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_usuarios_proto_goTypes = []any{
	(*ListaUsuarios)(nil),              // 0: grpc.ListaUsuarios
	(*ResponsePerfisVinculados)(nil),   // 1: grpc.ResponsePerfisVinculados
	(*RequestAlterarSenhaAdmin)(nil),   // 2: grpc.RequestAlterarSenhaAdmin
	(*RequestAlterarSenhaUsuario)(nil), // 3: grpc.RequestAlterarSenhaUsuario
	(*ResponseTokenResetSenha)(nil),    // 4: grpc.ResponseTokenResetSenha
	(*Usuario)(nil),                    // 5: grpc.Usuario
	(*Perfil)(nil),                     // 6: grpc.Perfil
	(*RequestVazio)(nil),               // 7: grpc.RequestVazio
	(*RequestId)(nil),                  // 8: grpc.RequestId
	(*UsuarioPerfis)(nil),              // 9: grpc.UsuarioPerfis
	(*LoginUsuario)(nil),               // 10: grpc.LoginUsuario
	(*EmailReset)(nil),                 // 11: grpc.EmailReset
	(*ResetSenhaUsuario)(nil),          // 12: grpc.ResetSenhaUsuario
	(*ResponseBool)(nil),               // 13: grpc.ResponseBool
	(*RetornoLoginUsuario)(nil),        // 14: grpc.RetornoLoginUsuario
}
var file_usuarios_proto_depIdxs = []int32{
	5,  // 0: grpc.ListaUsuarios.usuarios:type_name -> grpc.Usuario
	6,  // 1: grpc.ResponsePerfisVinculados.perfis:type_name -> grpc.Perfil
	7,  // 2: grpc.Usuarios.FindAllUsuarios:input_type -> grpc.RequestVazio
	8,  // 3: grpc.Usuarios.FindUsuarioById:input_type -> grpc.RequestId
	8,  // 4: grpc.Usuarios.GetPerfisVinculados:input_type -> grpc.RequestId
	9,  // 5: grpc.Usuarios.CreateUsuario:input_type -> grpc.UsuarioPerfis
	8,  // 6: grpc.Usuarios.CloneUsuario:input_type -> grpc.RequestId
	9,  // 7: grpc.Usuarios.UpdateUsuario:input_type -> grpc.UsuarioPerfis
	2,  // 8: grpc.Usuarios.AlterarSenhaAdmin:input_type -> grpc.RequestAlterarSenhaAdmin
	3,  // 9: grpc.Usuarios.AlterarSenhaUsuario:input_type -> grpc.RequestAlterarSenhaUsuario
	8,  // 10: grpc.Usuarios.AtivarUsuario:input_type -> grpc.RequestId
	8,  // 11: grpc.Usuarios.DesativarUsuario:input_type -> grpc.RequestId
	10, // 12: grpc.Usuarios.Login:input_type -> grpc.LoginUsuario
	11, // 13: grpc.Usuarios.TokenResetSenha:input_type -> grpc.EmailReset
	12, // 14: grpc.Usuarios.ResetSenha:input_type -> grpc.ResetSenhaUsuario
	0,  // 15: grpc.Usuarios.FindAllUsuarios:output_type -> grpc.ListaUsuarios
	9,  // 16: grpc.Usuarios.FindUsuarioById:output_type -> grpc.UsuarioPerfis
	1,  // 17: grpc.Usuarios.GetPerfisVinculados:output_type -> grpc.ResponsePerfisVinculados
	9,  // 18: grpc.Usuarios.CreateUsuario:output_type -> grpc.UsuarioPerfis
	9,  // 19: grpc.Usuarios.CloneUsuario:output_type -> grpc.UsuarioPerfis
	9,  // 20: grpc.Usuarios.UpdateUsuario:output_type -> grpc.UsuarioPerfis
	13, // 21: grpc.Usuarios.AlterarSenhaAdmin:output_type -> grpc.ResponseBool
	13, // 22: grpc.Usuarios.AlterarSenhaUsuario:output_type -> grpc.ResponseBool
	13, // 23: grpc.Usuarios.AtivarUsuario:output_type -> grpc.ResponseBool
	13, // 24: grpc.Usuarios.DesativarUsuario:output_type -> grpc.ResponseBool
	14, // 25: grpc.Usuarios.Login:output_type -> grpc.RetornoLoginUsuario
	4,  // 26: grpc.Usuarios.TokenResetSenha:output_type -> grpc.ResponseTokenResetSenha
	13, // 27: grpc.Usuarios.ResetSenha:output_type -> grpc.ResponseBool
	15, // [15:28] is the sub-list for method output_type
	2,  // [2:15] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_usuarios_proto_init() }
func file_usuarios_proto_init() {
	if File_usuarios_proto != nil {
		return
	}
	file_modelos_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_usuarios_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListaUsuarios); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usuarios_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ResponsePerfisVinculados); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usuarios_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RequestAlterarSenhaAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usuarios_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RequestAlterarSenhaUsuario); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usuarios_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ResponseTokenResetSenha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_usuarios_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_usuarios_proto_goTypes,
		DependencyIndexes: file_usuarios_proto_depIdxs,
		MessageInfos:      file_usuarios_proto_msgTypes,
	}.Build()
	File_usuarios_proto = out.File
	file_usuarios_proto_rawDesc = nil
	file_usuarios_proto_goTypes = nil
	file_usuarios_proto_depIdxs = nil
}
