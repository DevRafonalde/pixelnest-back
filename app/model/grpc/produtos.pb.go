// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: produtos.proto

package grpc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListaProdutos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Produtos []*Produto `protobuf:"bytes,1,rep,name=produtos,proto3" json:"produtos,omitempty"`
}

func (x *ListaProdutos) Reset() {
	*x = ListaProdutos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_produtos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListaProdutos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListaProdutos) ProtoMessage() {}

func (x *ListaProdutos) ProtoReflect() protoreflect.Message {
	mi := &file_produtos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListaProdutos.ProtoReflect.Descriptor instead.
func (*ListaProdutos) Descriptor() ([]byte, []int) {
	return file_produtos_proto_rawDescGZIP(), []int{0}
}

func (x *ListaProdutos) GetProdutos() []*Produto {
	if x != nil {
		return x.Produtos
	}
	return nil
}

var File_produtos_proto protoreflect.FileDescriptor

var file_produtos_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x6f, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x74, 0x6f, 0x73, 0x32, 0x93, 0x05, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x74, 0x6f, 0x73, 0x12, 0x5a, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x74, 0x6f, 0x73, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x61, 0x7a, 0x69, 0x6f, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x73, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e,
	0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x12,
	0x56, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x74, 0x6f, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x74, 0x6f, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x12, 0x67, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x42, 0x79, 0x4e, 0x6f, 0x6d, 0x65, 0x12, 0x11, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x1a,
	0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x74, 0x6f, 0x73, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x6d, 0x65, 0x2f, 0x7b, 0x4e, 0x6f, 0x6d, 0x65, 0x7d,
	0x12, 0x6b, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x42,
	0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x12, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x73, 0x22,
	0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e,
	0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x2f, 0x7b, 0x4e, 0x6f, 0x6d, 0x65, 0x7d, 0x12, 0x50, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x12, 0x0d,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x1a, 0x0d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e,
	0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x12,
	0x50, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f,
	0x12, 0x0d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x1a,
	0x0d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x22, 0x21,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x1a, 0x16, 0x2f, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x74,
	0x6f, 0x12, 0x59, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x74, 0x6f, 0x12, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a,
	0x1b, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x74, 0x6f, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x42, 0x14, 0x5a, 0x12,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_produtos_proto_rawDescOnce sync.Once
	file_produtos_proto_rawDescData = file_produtos_proto_rawDesc
)

func file_produtos_proto_rawDescGZIP() []byte {
	file_produtos_proto_rawDescOnce.Do(func() {
		file_produtos_proto_rawDescData = protoimpl.X.CompressGZIP(file_produtos_proto_rawDescData)
	})
	return file_produtos_proto_rawDescData
}

var file_produtos_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_produtos_proto_goTypes = []any{
	(*ListaProdutos)(nil), // 0: grpc.ListaProdutos
	(*Produto)(nil),       // 1: grpc.Produto
	(*RequestVazio)(nil),  // 2: grpc.RequestVazio
	(*RequestId)(nil),     // 3: grpc.RequestId
	(*RequestNome)(nil),   // 4: grpc.RequestNome
	(*ResponseBool)(nil),  // 5: grpc.ResponseBool
}
var file_produtos_proto_depIdxs = []int32{
	1, // 0: grpc.ListaProdutos.produtos:type_name -> grpc.Produto
	2, // 1: grpc.Produtos.FindAllProdutos:input_type -> grpc.RequestVazio
	3, // 2: grpc.Produtos.FindProdutoById:input_type -> grpc.RequestId
	4, // 3: grpc.Produtos.FindProdutoByNome:input_type -> grpc.RequestNome
	4, // 4: grpc.Produtos.FindProdutoByGenero:input_type -> grpc.RequestNome
	1, // 5: grpc.Produtos.CreateProduto:input_type -> grpc.Produto
	1, // 6: grpc.Produtos.UpdateProduto:input_type -> grpc.Produto
	3, // 7: grpc.Produtos.DeleteProduto:input_type -> grpc.RequestId
	0, // 8: grpc.Produtos.FindAllProdutos:output_type -> grpc.ListaProdutos
	1, // 9: grpc.Produtos.FindProdutoById:output_type -> grpc.Produto
	0, // 10: grpc.Produtos.FindProdutoByNome:output_type -> grpc.ListaProdutos
	0, // 11: grpc.Produtos.FindProdutoByGenero:output_type -> grpc.ListaProdutos
	1, // 12: grpc.Produtos.CreateProduto:output_type -> grpc.Produto
	1, // 13: grpc.Produtos.UpdateProduto:output_type -> grpc.Produto
	5, // 14: grpc.Produtos.DeleteProduto:output_type -> grpc.ResponseBool
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_produtos_proto_init() }
func file_produtos_proto_init() {
	if File_produtos_proto != nil {
		return
	}
	file_modelos_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_produtos_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListaProdutos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_produtos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_produtos_proto_goTypes,
		DependencyIndexes: file_produtos_proto_depIdxs,
		MessageInfos:      file_produtos_proto_msgTypes,
	}.Build()
	File_produtos_proto = out.File
	file_produtos_proto_rawDesc = nil
	file_produtos_proto_goTypes = nil
	file_produtos_proto_depIdxs = nil
}
